Running Pd on a Raspberry Pi
Posted on 08/10/2012 by guitarextended
This is great news : Pure data (Pd vanilla, the standard package, Miller Puckette‘s version) runs out of the box on a Raspberry Pi! No tweeks necessary.

Here’s what you need to do :

1) Buy a Raspberry Pi (see “Where to buy” in the column to the right of this page).

2) Put the standard OS (“Raspbian Wheezy”) on your SD card (downloads and directions to setup instructions available on this page).

3) Start your Pi, configure it, whatever suits your tastes and needs (that’s not in the scope of this post). Please note that the login is “Pi”, and the password “raspberry”.

4) in the Terminal, type : “sudo apt-get install puredata”, hit Enter (no password required), say yes whenever the terminal asks for it.

5) And that’s it. You can run Pd from the Application menu, in the Sound/Video (or something close) category. It uses Alsa by default and works fine with it.

The overall performance is quite low though…

Edit : I forgot : you should also follow this blog if you want more information on this topic : Limina.log .

Edit 2 : You can download a Raspbian image with Pd pre-installed + some presentations by Miller Puckette + his free book here : http://pd-la.info/pdpi/ I haven’t tested it myself so I can’t tell you how it compares with the standard Raspbian image with Pd installed manually.




Running Puredata on the Raspberry Pi
2012 JUNE 1
tags: Linux, PureData, RaspberryPi
by Tedb0t
I’m thrilled to say that today I succeeded in getting Puredata running on my Raspberry Pi. Here’s how!

First, follow this guide to get your Pi set up for the first time.  Make sure your Pi is connected to the internet, and now we can install Puredata.  We’ll start with Vanilla, since pd-extended is not maintained for ARM (as far as I can tell).  I’ll explore getting pd-extended working in a future post (hopefully very soon).

sudo apt-get update
sudo apt-get install puredata
Easy. What’s not easy is getting sound working. This took me about half the day but here’s what worked:

sudo apt-get install alsa-utils
sudo modprobe snd_bcm2835
Note that the modprobe line needs to be run every time the Pi is booted, so you can add it to an .rc file if you want.  Now connect some speakers, turn them down for safety, and run this to make sure sound works:

sudo aplay /usr/share/sounds/alsa/Front_Center.wav
If it works, good! You can now run a Pd patch like so:

pd -nogui -noadc -alsa testPatch.pd
For convenience, here’s my test patch (testPatch.pd) that outputs an LFO’d sine wave. *Important!* Notice in the patch that the loadbang is delayed by 100ms! This is deliberate to avoid a bug in Pd regarding ALSA.

Please let me know if this worked for you.  Happy hacking!  Next up, I’ll be trying to build Pd-extended and then tackling the Raspberry Pi’s General Purpose I/O.

UPDATE:

You’ll notice that the sound quality out of the 1/8? jack is messed up in some cases (most in my experience).  I’ve heard from various sources that the R-Pi does not use a “real” DAC (Digital-to-Analog-Converter) and that you should get better sound from a USB adapter or from the HDMI output.  Still following up on this.