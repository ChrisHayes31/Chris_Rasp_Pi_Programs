[{"id":"8c50bcd0.1b60e","type":"function","z":"f8e9bf62.11b23","name":"Python Shell","func":"msg.payload = msg.payload;\nvar temp_app;\nvar options = {\n    mode: 'text',\n    pythonPath: '/home/pi/.node-red/node_modules/lcd',\n    pythonOptions: ['-u'],\n    scriptPath: 'path/to/my/scripts',\n    args: ['value1', 'value2', 'value3']\n    };    \n    \nif (msg === \"Display_Clock\")\n    {\n    temp_app = 'demo_clock.py';    \n    }\nvar PythonShell = require('python-shell');\n \nPythonShell.run(temp_app, function (err)  \n//PythonShell.run('demo_clock.py', function (err) \n    {\n    if (err) throw err;\n    console.log('finished');\n    });\n\n// https://www.npmjs.com/package/python-shell\n\nreturn temp_app;\n\n\n/*\nvar PythonShell = require('python-shell');\n \nvar options = {\n  mode: 'text',\n  pythonPath: 'path/to/python',\n  pythonOptions: ['-u'],\n  scriptPath: 'path/to/my/scripts',\n  args: ['value1', 'value2', 'value3']\n};\n \nPythonShell.run('my_script.py', options, function (err, results) {\n  if (err) throw err;\n  // results is an array consisting of messages collected during execution \n  console.log('results: %j', results);\n});\n*/","outputs":1,"noerr":0,"x":470,"y":240,"wires":[["fc10bd08.992b7"]]},{"id":"4f72ec99.4d52b4","type":"inject","z":"f8e9bf62.11b23","name":"Display Clock","topic":"","payload":"Display_Clock","payloadType":"str","repeat":"","crontab":"","once":false,"x":270,"y":240,"wires":[["8c50bcd0.1b60e"]]},{"id":"fc10bd08.992b7","type":"debug","z":"f8e9bf62.11b23","name":"","active":false,"console":"false","complete":"false","x":670,"y":240,"wires":[]},{"id":"ea971ada.342b68","type":"function","z":"f8e9bf62.11b23","name":"","func":"//var myPythonScriptPath = 'script.py';\nvar myPythonScriptPath = 'demo_clock.py'; // run python program demo_clock.py\n// /home/pi/.node-red/lcd\n\n// Use python shell\nvar PythonShell = require('python-shell');\nvar pyshell = new PythonShell(myPythonScriptPath);\n\npyshell.on('message', function (message) \n    {\n    // received a message sent from the Python script (a simple \"print\" statement)\n    console.log(message);\n    });\n\n// end the input stream and allow the process to exit\npyshell.end(function (err) \n    {\n    if (err)\n        {\n        throw err;\n        }\n    console.log('finished');\n    });\n\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":380,"wires":[["df29b55c.9bcd58"]]},{"id":"df29b55c.9bcd58","type":"debug","z":"f8e9bf62.11b23","name":"","active":true,"console":"false","complete":"false","x":600,"y":380,"wires":[]},{"id":"2fa214a7.46a7ac","type":"inject","z":"f8e9bf62.11b23","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":260,"y":380,"wires":[["ea971ada.342b68"]]},{"id":"f3eecbb8.83f828","type":"function","z":"f8e9bf62.11b23","name":"test python global","func":"msg.payload = msg.payload;\nvar PythonShell = global.get('python-shell');\n//var PythonShell = require('python-shell');\nvar options = \n    {\n    scriptPath: '/home/pi/.node-red/node_modules/lcd',\n    args: [msg.payload]\n    //args: ['value1', 'value2', 'value3']\n    };\n/*\nvar options = \n    {\n    mode: 'text',\n    pythonPath: '/home/pi/.node-red/node_modules/lcd',\n    //pythonPath: 'path/to/python',\n    pythonOptions: ['-u'],\n    scriptPath: '/home/pi/.node-red/node_modules/lcd',\n    //scriptPath: 'path/to/my/scripts',\n    args: ['value1', 'value2', 'value3']\n    };\n*/ \nPythonShell.run('lcd_text_to_display.py', options, function (err, results) \n    {\n    if (err) throw err;\n        // results is an array consisting of messages collected during execution \n        console.log('results: %j', results);\n    });\n\n\n/*\nvar PythonShell = require('python-shell');\n\nvar options = {\nscriptPath: '/home/pi/gpio-admin/MFRC522-python/'\n};\nvar pyshell = new PythonShell('Read.py',options);\n\n\npyshell.on('message', function (message) {\n\n    console.log(message);\n});\n*/","outputs":1,"noerr":0,"x":530,"y":140,"wires":[["83202c8.bddfbd"]]},{"id":"83202c8.bddfbd","type":"debug","z":"f8e9bf62.11b23","name":"","active":true,"console":"false","complete":"false","x":770,"y":60,"wires":[]},{"id":"174c7fc8.35059","type":"inject","z":"f8e9bf62.11b23","name":"Hello Chris Line 2","topic":"","payload":"Hello Chris :2","payloadType":"str","repeat":"","crontab":"","once":false,"x":240,"y":120,"wires":[["f3eecbb8.83f828"]]},{"id":"6266c53b.54e6ac","type":"inject","z":"f8e9bf62.11b23","name":"Hello Chris Line 1","topic":"","payload":"Hello Chris :1","payloadType":"str","repeat":"","crontab":"","once":false,"x":240,"y":80,"wires":[[]]},{"id":"6e5dc3db.10c04c","type":"inject","z":"f8e9bf62.11b23","name":"Hello Chris Line 3","topic":"","payload":"Hello Chris :3","payloadType":"str","repeat":"","crontab":"","once":false,"x":240,"y":160,"wires":[[]]},{"id":"e52ee3ab.8e4c4","type":"inject","z":"f8e9bf62.11b23","name":"Hello Chris Line 4","topic":"","payload":"Hello Chris :4","payloadType":"str","repeat":"","crontab":"","once":false,"x":240,"y":200,"wires":[[]]}]