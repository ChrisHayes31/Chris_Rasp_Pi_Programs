[{"id":"61850c26.fee6e4","type":"function","z":"b21c1628.a0f6b8","name":"extract temps","func":"var array_length = { payload: msg.payload.length };\nvar s_data = [];\n\nfor (var i = 0; i < array_length; i++)\n    {\n    s_data.push(msg[i].val);\n    return [s_data];\n            \n    //var s_data = msg.payload['ROM'];        \n    //var t_data = msg.payload.split(',');\n    //var temp_dta = parse(t_data[1]);\n    //var maca_dta = parse(t_data[0]);\n    //return [maca_dta],[temp_dta];\n    }\n\nreturn [null];\n//return [s_data];","outputs":"1","noerr":0,"x":410,"y":100,"wires":[["24f1a125.6f23ee"]]},{"id":"24f1a125.6f23ee","type":"debug","z":"b21c1628.a0f6b8","name":"","active":false,"console":"false","complete":"false","x":640,"y":100,"wires":[]},{"id":"f7c84da.10548b","type":"inject","z":"b21c1628.a0f6b8","name":"","topic":"","payload":"2345678,23.45","payloadType":"str","repeat":"","crontab":"","once":false,"x":150,"y":100,"wires":[["61850c26.fee6e4"]]},{"id":"84012479.2d6ae8","type":"inject","z":"b21c1628.a0f6b8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"*/5 0-23 * * *","once":false,"x":130,"y":240,"wires":[["9bf2ec85.f9163"]]},{"id":"9bf2ec85.f9163","type":"http request","z":"b21c1628.a0f6b8","name":"","method":"GET","ret":"txt","url":"http://192.168.1.125","tls":"","x":190,"y":320,"wires":[["1b571bfe.b2c5e4","9e2e1036.f85f4"]]},{"id":"1b571bfe.b2c5e4","type":"csv","z":"b21c1628.a0f6b8","name":"","sep":",","hdrin":true,"hdrout":false,"multi":"mult","ret":"\\n","temp":"","x":510,"y":200,"wires":[["9256ea58.4265e8","71d1a63d.8fe5e8"]]},{"id":"9e2e1036.f85f4","type":"debug","z":"b21c1628.a0f6b8","name":"http:request_Message","active":false,"console":"false","complete":"payload","x":400,"y":320,"wires":[]},{"id":"9256ea58.4265e8","type":"debug","z":"b21c1628.a0f6b8","name":"","active":false,"console":"false","complete":"payload","x":710,"y":200,"wires":[]},{"id":"d99d76bb.1a3a98","type":"function","z":"b21c1628.a0f6b8","name":"function 1","func":"var array_length = { payload: msg.payload.length };\nvar raw_text = { payload: msg.payload };\nvar t_temp = 'Temperature';\nvar t_ROM  = 'ROM';\n//var s_data = [];\n\nvar s_data1 = msg //{payload:\"test1\"};\n\nvar s_data2 = {payload:msg.payload};\nvar s_data3 = {payload:\"test3\"};\nvar s_data4 = msg.payload.split(\",\");\n\n\nfor (var i = 0; i < array_length; i++)\n    {\n    //return [s_data1, s_data2, s_data3, s_data4];\n    }\n    //var temp_dta = parse(t_data[1]);\n    //s_data.push(msg.val);\n    //return i;\n            \n   //var s_data = msg.payload['ROM'];        \n   //var t_data = msg.payload.split(',');\n    //var temp_dta = parse(t_data[1]);\n    //var maca_dta = parse(t_data[0]);\n    //return [maca_dta],[temp_dta];\n    \n\n//return msg;\nreturn s_data4;\n\n\n//get the size of the array\n//for each item in the array loop through\n//using the field names in each item\n//pass each item into influxdb\n//then stop\n//var newMsg = { payload: msg.payload.length };\n//return newMsg;","outputs":1,"noerr":0,"x":660,"y":280,"wires":[[]]},{"id":"12c021a5.fe494e","type":"debug","z":"b21c1628.a0f6b8","name":"Extract_Message","active":false,"console":"false","complete":"payload","x":730,"y":380,"wires":[]},{"id":"5d94983a.f70058","type":"function","z":"b21c1628.a0f6b8","name":"Extract_Temps","func":"var myDataArray = msg.payload;\nvar arrayLength = myDataArray.length;\nvar t_data = [];\n/*\nfor (var i = 0; i < arrayLength; i++) \n    {\n    //msg.payload = (myDataArray[i]);\n    //t_data[i] = (myDataArray[i]);\n    //t_data[i+1] = (myDataArray[i]);\n    msg.payload = msg.payload[0][0].last;\n    return msg;\n    //return t_data[i];\n    //return msg;\n    }\n*/\n//msg.payload = msg.payload.[0].[0].last;\n//msg.payload = msg.payload[0][0].last;\nreturn msg;\n    ","outputs":1,"noerr":0,"x":200,"y":520,"wires":[[]]},{"id":"71d1a63d.8fe5e8","type":"function","z":"b21c1628.a0f6b8","name":"Extract_Test","func":"var myStringArray = msg.payload; // load the array with the incoming messgae\nvar arrayLength = myStringArray.length; // how many are in the array\nvar ext_msg;\nfor (var i = 0; i < arrayLength; i++) // create a loop to test the following\n    {\n    ext_msg = [ // setup the message for the transmission to Influxdb\n        {\n        measurement: \"local-temperatures-test1\",\n        fields: { Temperature: (myStringArray[i].Temperature) }, // trans-scribe from the array Temperature data \n        tags:{ ROM: (myStringArray[i].ROM) }, // trans-scribe from the array ROM data\n        timestamp: new Date()\n        }];\n    node.send({payload:ext_msg}); // send each element message\n    }\nreturn null;","outputs":1,"noerr":0,"x":450,"y":400,"wires":[["12c021a5.fe494e"]]},{"id":"79afed6.9839a14","type":"function","z":"b21c1628.a0f6b8","name":"Seperated_TEMPS and ROM_Data","func":"var parts;\nvar ext_msg;\nvar msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\nmsg.string = msg.payload; //.split(\" \");\nmsg1.payload=msg.string[1]; // ROM Feild name\nmsg2.payload=msg.string[2]; // ROM value\nmsg3.payload=msg.string[3]; // Temperature field name\nmsg4.payload=msg.string[4]; // Temperature value\n\next_msg = [\n    {\n    measurement: \"local-temperatures-test1\",\n    fields: { Temperature: msg4 },\n    //fields: { Temperature: 21.00 },\n    tags:{ ROM: msg2 },\n    //tags:{ ROM:\"280c035a050000db\" },\n    timestamp: new Date()\n    }];\n\nnode.send({payload:ext_msg});\n//node.send {l_len};\n    //node.send({payload:result});\n\n/*\nvar myStringArray = msg.payload;\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i < arrayLength; i++) \n    {\n    var result = (myStringArray[i]);\n    node.send({payload:result});\n    }\nreturn null;\n*/\n/*\nvar msg1;\nvar msg2;\nvar msg3;\n\nmsg1 = [\n    {\n    measurement: \"local-temperatures-test1\",\n    fields: { Temperature: 21.00 },\n    tags:{ ROM:\"280c035a050000db\" },\n    timestamp: new Date()\n    }];\nnode.send({payload:msg1});\n\nmsg2 = [   \n    {\n    measurement: \"local-temperatures-test1\",\n    fields: { Temperature: 22.00 },\n    tags:{ ROM:\"28fc485a05000030\" },\n    timestamp: new Date() \n    }];\nnode.send({payload:msg2});\n\nmsg3 = [   \n    {\n    measurement: \"local-temperatures-test1\",\n    fields: { Temperature: 23.00 },\n    tags:{ ROM:\"28fd555a05000097\" },\n    timestamp: new Date()\n    }];\nnode.send({payload:msg3});\n*/\nreturn null;","outputs":1,"noerr":0,"x":560,"y":480,"wires":[["b9c23682.157598"]]},{"id":"b9c23682.157598","type":"debug","z":"b21c1628.a0f6b8","name":"Seperated_TEMPS","active":false,"console":"false","complete":"payload","x":750,"y":440,"wires":[]},{"id":"c152eb84.33bf68","type":"function","z":"b21c1628.a0f6b8","name":"Copied extratcted","func":"var ext_msg;\nvar msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\nvar msg5 = {};\nvar myStringArray = msg.payload;\nvar arrayLength = myStringArray.length;\n//msg5.string = msg.payload.split(\" \");\nmsg2.payload = parseInt(result[2]); // ROM value position 2\nmsg4.payload = parseInt(result[4]); // Temperature value position 4\n/*\nfor (var i = 0; i < arrayLength; i++) \n    {\n    var result = (myStringArray[i]);\n    \n    //msg1.payload = parse(result); // ROM Feild name\n    //msg1.payload=myStringArray[i].string[1]; // ROM Feild name\n    msg2.payload = parseInt(result[2]); // ROM value position 2\n    //msg3.payload=myStringArray[i].string[3]; // Temperature field name\n    //msg4.payload=myStringArray[i].string[4]; // Temperature value\n    msg4.payload = parseInt(result[4]); // Temperature value position 4\n*/\next_msg = [\n    {\n    measurement: \"local-temperatures-test1\",\n    fields: { Temperature: msg4 },\n    //fields: { Temperature: 21.00 },\n    tags:{ ROM: msg2 },\n    //tags:{ ROM:\"280c035a050000db\" },\n    timestamp: new Date()\n    }];\n\nnode.send({payload:ext_msg});\n    //node.send({payload:result});\n    \nreturn null;","outputs":1,"noerr":0,"x":220,"y":400,"wires":[[]]}]